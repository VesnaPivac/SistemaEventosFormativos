# Generated by Django 3.2.8 on 2021-12-04 17:30

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import eventos.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rol', models.CharField(choices=[('PARTICIPANTE', 'Participante'), ('INSTRUCTOR', 'Instructor'), ('RESPONSABLE', 'Responsable')], default='PARTICIPANTE', max_length=50)),
                ('imagen', models.ImageField(default='user.png', null=True, upload_to='')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('TipoEventos', models.CharField(choices=[('Diplomado', 'Diplomado'), ('Curso', 'Curso'), ('Taller', 'Taller'), ('Programa Especial', 'Programa Especial')], max_length=30, null=True)),
                ('modalidad', models.CharField(choices=[('En Lineal', 'En Lineal'), ('Presencial', 'Presencial'), ('Mixta', 'Mixta')], max_length=30, null=True)),
                ('objetivos', models.TextField(null=True)),
                ('experiencias', models.TextField(null=True)),
                ('contenido', models.TextField(null=True)),
                ('recursos_y_materiales', models.TextField(blank=True, null=True)),
                ('Estrategias_de_Evaluacion', models.TextField(null=True)),
                ('Fecha_de_Inicio', models.DateField()),
                ('Fecha_de_Fin', models.DateField()),
                ('Referencias_y_bibliografia', models.TextField(blank=True, null=True)),
                ('Utilidad_y_Oportunidad_del_programa', models.TextField(null=True)),
                ('Cupo_Maximo', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('Requisistos_de_Acreditacion', models.TextField(null=True)),
                ('Experiencia_y_pericia_de_Instructores', models.TextField(null=True)),
                ('Dirigido_a', models.TextField(null=True)),
                ('Requisitos_de_Participacion', models.TextField(null=True)),
                ('Curriculum_de_los_Instructores', models.TextField(null=True)),
                ('Capacidad_de_utofinanciamiento', models.TextField(blank=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('responsable', models.ForeignKey(default=eventos.models.Usuario, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('eventos.usuario',),
        ),
        migrations.CreateModel(
            name='Participante',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('eventos.usuario',),
        ),
        migrations.CreateModel(
            name='Responsable',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('eventos.usuario',),
        ),
    ]
